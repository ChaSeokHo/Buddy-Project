<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fivet.buddy.mapper.ChatRoomMapper">

    <!-- 팀 생성시 생성되는 기본채팅방-->
    <insert id="createTeam">
        insert into
            chat_room
        values
            (chat_room_seq.nextval, #{teamSeq}, #{teamName}, 'basic', 1, sysdate)
        <selectKey order="AFTER" keyProperty="chatRoomSeq" resultType="String">
            select chat_room_seq.currval from dual
        </selectKey>
    </insert>

    <!--    팀 합류시(생성 포함) 기본적으로 추가되는 나와의 대화-->
    <insert id="insertSelfChat">
        insert into
            chat_room
        values
            (chat_room_seq.nextval, #{teamSeq}, '나와의 대화', 'self', 1, sysdate)
        <selectKey order="AFTER" keyProperty="chatRoomSeq" resultType="String">
            select chat_room_seq.currval from dual
        </selectKey>
    </insert>

    <!-- 팀 및 회원 정보로 채팅방 목록을 출력 (토픽제외) -->
    <select id="chatRoomList" resultType="com.fivet.buddy.dto.ChatRoomDTO">
        select
            cr.chat_room_seq, chat_title, chat_Type
        from
            chat_room cr inner join chat_member cm on cr.chat_room_seq = cm.chat_room_seq
        where
            cm.member_seq = #{memberSeq}
            and
            cm.team_seq = #{teamSeq}
            and
            chat_type != 'topic'

        order by 1
    </select>

    <!--    팀 합류시, 필요한 채팅방 번호를 출력-->
    <select id="selectChatRoomSeq" resultType="string">
         select chat_room_seq from chat_room where team_seq = #{teamSeq} and chat_type = #{chatType}
    </select>

    <!--    채팅방 인원 추가시, 채팅방 인원수 +1-->
    <update id="updatePlusMemberCount">
        update chat_room set member_count = member_count+1 where chat_room_seq = #{chatRoomSeq}
    </update>

    <!--    토픽 생성-->
    <insert id="insertTopic">
        insert into
            chat_room
        values (
            chat_room_seq.nextval,
            #{teamSeq},
            #{chatTitle},
            'topic',
            #{memberCount},
            sysdate
            )
        <selectKey order="AFTER" keyProperty="chatRoomSeq" resultType="int">
            select chat_room_seq.currval from dual
        </selectKey>
    </insert>

    <!-- 팀내 토픽 목록 출력   -->
    <select id="selectTopic" resultType="com.fivet.buddy.dto.ChatRoomDTO">
        select * from chat_room where chat_type='topic' and team_seq = #{value} order by 1
    </select>

    <!-- 토픽수 count   -->
    <select id="countTopic" resultType="int">
        select count(*) from chat_room where chat_type='topic' and team_seq=#{value}
    </select>

    <!-- 일반 채팅방 개설  -->
    <insert id="insertNormalChat">
        insert into
        chat_room
        values
        (chat_room_seq.nextval, #{teamSeq}, #{chatTitle}, 'normal', #{memberCount}, sysdate)
        <selectKey order="AFTER" keyProperty="chatRoomSeq" resultType="int">
            select chat_room_seq.currval from dual
        </selectKey>
    </insert>

    <!-- 채팅방 삭제   -->
    <delete id="delChatRoom">
        delete from chat_room where chat_room_seq = #{value}
    </delete>

    <!--    채팅방 이름 변경-->
    <update id="updateChatTitle">
        update chat_room set chat_title = #{chatTitle} where chat_room_seq = #{chatRoomSeq}
    </update>

    <!--    회원 채팅방 나간경우, 인원수 1 감소-->
    <update id="delChatMember">
        update chat_room set member_count = member_count -1 where chat_room_seq = #{value}
    </update>

    <!--    회원 채팅방 초대시, 인원수 1 증가-->
    <update id="updateChatMemberCount">
        update chat_room set member_count = member_count +1 where chat_room_seq = #{value}
    </update>

    <!--    회원수가 0이 된 채팅방은 지운다. delectChatMember 등과 연계하여 사용.-->
    <delete id="delChatRoomCountZero">
        delete from chat_room where member_count = 0
    </delete>

    <!--    특정 회원이 1명뿐인 팀의 채팅방을 모두 삭제.-->
    <delete id="delOnlyOneChatRoom">
        delete from
            (select cr.*
                from chat_room cr
                left outer join team t
                on t.team_seq = cr.team_seq
                left outer join member m
                on t.team_owner_seq = m.member_seq
            where m.member_seq=#{memberSeq} and t.team_count = 1);
    </delete>

    <!-- 채팅방에 실 참여자인지 여부 체크 -->
    <select id="selectChatRoom" resultType="int">
        select count(*) from chat_member where chat_room_seq = #{chatRoomSeq} and member_seq = #{memberSeq}
    </select>
</mapper>