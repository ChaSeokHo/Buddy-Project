<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fivet.buddy.mapper.TeamMemberMapper">

    <!-- 초대코드 입력 시 팀 입장 -->
    <insert id="enterTeam">
        insert into
        team_member
        values
        (#{teamSeq}, #{memberSeq}, #{memberId}, #{teamMemberNickname}, '팀원', sysdate)
    </insert>

    <!-- 팀 생성자가 팀 생성시, 팀 멤버 목록에 추가 -->
    <insert id="createTeam">
        <selectKey order="BEFORE" keyProperty="memberId" resultType="string">
            select
            member_id
            from
            member
            where member_seq = #{memberSeq}
        </selectKey>
        insert into
        team_member
        values
        (#{teamSeq}, #{memberSeq}, #{memberId}, #{teamMemberNickname}, '매니저', sysdate)
    </insert>

    <!--    회원 번호를 이용하여 해당 팀 관련 회원정보 출력.-->
    <select id="selectOne" resultType="com.fivet.buddy.dto.TeamMemberDTO">
        select
        *
        from
        team_member
        where
        member_seq = #{memberSeq} and team_seq = #{teamSeq}
    </select>

    <!--  기본채팅방 참여자 목록을 출력 -->
    <select id="selectChatMember" resultType="com.fivet.buddy.dto.TeamMemberDTO">
        select
        tm.member_seq, team_member_nickname, grade
        from
        team_member tm
        inner join
        chat_member cm
        on
        tm.member_seq = cm.member_seq and tm.team_seq = cm.team_seq
        where
        chat_room_seq = #{chatRoomSeq}
    </select>

    <!--팀 멤버 출력 -->
    <select id="selectTeamMember" resultType="com.fivet.buddy.dto.TeamMemberListDTO">
        select * from team_member t inner join member_img i on t.member_seq=i.member_img_member_seq where team_seq = #{value}
        order by case
        when grade='매니저' then 1
        when grade='부매니저' then 2
        when grade='팀원' then 3
        end, member_seq asc
    </select>

    <!-- 멤버 등급 변경 -->
    <update id="updateTeamMemberGrade">
        update team_member set grade = #{grade} where member_seq = #{memberSeq} and team_seq = #{teamSeq}
    </update>

    <!-- 멤버 등급 변경 ( 매니저가 다른 사람한테 매니저 이양할 때 ) -->
    <update id="updateTeamMemberManager">
        update team_member set grade = '팀원' where member_seq = #{manageSeq} and team_seq = #{teamSeq}
    </update>

    <!-- 팀 관리 페이지에서 팀원 강퇴 -->
    <delete id="deleteTeamMember">
        delete from team_member where member_seq = #{memberSeq} and team_seq = #{teamSeq}
    </delete>

    <!--부매니저인 멤버 출력 (부매니저일때도 팀 관리 들어갈 수 있게) -->
    <select id="selectSubManagerMember" resultType="int">
        select count(t.grade) from team_member t inner join member m on m.member_seq=t.member_seq where t.member_seq= #{value} and t.grade='부매니저'
    </select>

    <!--    멤버 번호 목록을 출력-->
    <select id="selectTeamMemberSeq" resultType="int">
        select member_seq from team_member where team_Seq = #{teamSeq}
    </select>

    <!--    회원이 팀에 속하는지 판단-->
    <select id="selectCheckMember" resultType="int">
        select
            count(*)
        from
            team_member
        where
            member_seq = #{memberSeq} and team_seq = #{teamSeq}
    </select>

    <!--    회원이 속한 팀 수를 체크-->
    <select id="countMemberTeam" resultType="int">
        select count(*) from team_member where member_seq = #{value}
    </select>

    <select id="countTeamMember" resultType="int">
        select count(*) from team_member where team_seq = #{value}
    </select>

    <!-- 채팅방 멤버 프로필 이미지 -->
    <select id="selectTeamMemberImg" resultType="String">
        select m.member_img_sysname from member_img m inner join chat_member c on m.member_img_member_seq=c.member_seq where c.member_seq = #{memberSeq} and c.chat_room_seq = #{chatRoomSeq}
    </select>

    <!-- 부매니저 수 체크-->
    <select id="subManagerCount" resultType="int">
        select count(*) from team_member where team_seq = #{value} and grade='부매니저'
    </select>

    <!-- 팀원 닉네임 변경 -->
    <update id="updateTeamMemberNickName">
        update team_member set team_member_nickname = #{teamMemberNickname} where member_seq = #{memberSeq} and team_seq = #{teamSeq}
    </update>

    <!--    회원 팀목록 출력-->
    <select id="selectMembersTeam" resultType="com.fivet.buddy.dto.TeamMemberDTO">
        select * from team_member where member_seq = #{memberSeq}
    </select>

    <!--    회원이 매니저로 있는 팀 목록 출력-->
    <select id="selectMembersManager" resultType="com.fivet.buddy.dto.TeamMemberDTO">
        select *
            from team_member tm
            left outer join team t
            on tm.team_seq = t.team_seq
            where member_seq = #{memberSeq}
    </select>

    <!--    팀이 특정 회원 1명뿐인 팀 목록을 삭제-->
    <delete id="delOnlyOneTeamMember">
        delete from
            (select tm.*
                from team_member tm
                left outer join team t
                on tm.team_seq = t.team_seq
                left outer join member m
                on t.team_owner_seq = t.team_owner_seq
            where m.member_seq = #{memberSeq})
    </delete>
</mapper>